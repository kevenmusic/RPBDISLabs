@using MarriageAgency.ViewModels.ClientsViewModel;
@model ClientsViewModel;

@{
    ViewData["Title"] = "Клиенты";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ClientName = Model.FilterClientsViewModel.ClientName;
    string Gender = Model.FilterClientsViewModel.Gender;
    string NationalityName = Model.FilterClientsViewModel.NationalityName;
    string ZodiacSignName = Model.FilterClientsViewModel.ZodiacSignName;
    int? Age = Model.FilterClientsViewModel.Age;
    string Hobbies = Model.FilterClientsViewModel.Hobbies;
}

<h2 class="mb-4">Клиенты</h2>

<div class="mb-3">
    <a asp-action="Create" class="btn btn-primary">Создать</a>
</div>

@using (Html.BeginForm("Index", "Clients", FormMethod.Get, new { @class = "form-inline mb-3" }))
{
    <fieldset class="form-group">
        <label for="ClientName" class="mr-2">Имя клиента:</label>
        @Html.TextBox("ClientName", ClientName, new { @class = "form-control mr-2", @id = "ClientName" })
    </fieldset>

    <fieldset class="form-group">
        <label for="Gender" class="mr-2">Пол:</label>
        @Html.DropDownList("Gender", new List<SelectListItem>
        {
        new SelectListItem { Text = "Не выбрано", Value = "" },
        new SelectListItem { Text = "Мужской", Value = "Мужской" },
        new SelectListItem { Text = "Женский", Value = "Женский" }
        }, new { @class = "form-control mr-2", @id = "Gender" })
    </fieldset>

    <fieldset class="form-group">
        <label for="NationalityName" class="mr-2">Национальность:</label>
        @Html.DropDownList("NationalityName", (SelectList)ViewData["Name"], "Выберите национальность", new { @class = "form-control mr-2", @id = "NationalityId" })
    </fieldset>

    <fieldset class="form-group">
        <label for="ZodiacSignName" class="mr-2">Знак зодиака:</label>
        @Html.DropDownList("ZodiacSignName", (SelectList)ViewData["ZodiacSignName"], "Выберите знак зодиака", new { @class = "form-control mr-2", @id = "ZodiacSignId" })
    </fieldset>

    <fieldset class="form-group">
        <label for="Age" class="mr-2">Возраст:</label>
        @Html.TextBox("Age", Age?.ToString(), new { @class = "form-control mr-2", @id = "Age" })
    </fieldset>

    <fieldset class="form-group">
        <label for="Hobbies" class="mr-2">Хобби:</label>
        @Html.TextBox("Hobbies", Hobbies, new { @class = "form-control mr-2", @id = "Hobbies" })
    </fieldset>

    <input type="submit" value="Найти" class="btn btn-outline-success mt-1" />
}

<table class="table table-striped table-bordered">
    <thead class="thead-light">
        <tr>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.ClientPhoto)</th>
            <th style="width: 200px;">
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.ClientNameSort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @Html.DisplayNameFor(model => model.FilterClientsViewModel.ClientName)
                    @if (Model.SortViewModel.ClientNameSort == SortState.ClientNameAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.ClientNameSort == SortState.ClientNameDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.LastName)</th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.MiddleName)</th>
            <th style="width: 100px;">
                @Html.DisplayNameFor(model => model.FilterClientsViewModel.Gender)
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.GenderSort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @if (Model.SortViewModel.GenderSort == SortState.GenderAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.GenderSort == SortState.GenderDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.BirthDate)</th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.Profession)</th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterClientsViewModel.Contact.Phone)</th>
            <th style="width: 150px;">
                @Html.DisplayNameFor(model => model.FilterClientsViewModel.Age)
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.AgeSort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @if (Model.SortViewModel.AgeSort == SortState.AgeAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.AgeSort == SortState.AgeDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">
                @Html.DisplayNameFor(model => model.FilterClientsViewModel.Hobbies)
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.HobbiesSort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @if (Model.SortViewModel.HobbiesSort == SortState.HobbiesAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.HobbiesSort == SortState.HobbiesDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">
                @Html.DisplayNameFor(model => model.FilterClientsViewModel.NationalityName)
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.NationalitySort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @if (Model.SortViewModel.NationalitySort == SortState.NationalityAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.NationalitySort == SortState.NationalityDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">
                @Html.DisplayNameFor(model => model.FilterClientsViewModel.ZodiacSignName)
                <a asp-action="Index" asp-route-sortOrder="@Model.SortViewModel.ZodiacSignNameSort" asp-route-ClientName="@ClientName" asp-route-Gender="@Gender"
                   asp-route-NationalityName="@NationalityName" asp-route-ZodiacSignName="@ZodiacSignName" asp-route-Age="@Age" asp-route-Hobbies="@Hobbies"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @if (Model.SortViewModel.ZodiacSignNameSort == SortState.ZodiacSignNameAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.ZodiacSignNameSort == SortState.ZodiacSignNameDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;" class="text-center">Действие</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Clients)
        {
            <tr>
                <td>
                    <img src="~/images/@item.ClientPhoto" style="width:75px; height:75px;" />
                </td>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.MiddleName)</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@Html.DisplayFor(modelItem => item.BirthDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Profession)</td>
                <td>@Html.DisplayFor(modelItem => item.Contact.Phone)</td>
                <td>@Html.DisplayFor(modelItem => item.PhysicalAttribute.Age)</td>
                <td>@Html.DisplayFor(modelItem => item.PhysicalAttribute.Hobbies)</td>
                <td>@Html.DisplayFor(modelItem => item.Nationality.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.ZodiacSign.Name)</td>
                <td>
                    <div class="btn-group d-flex" role="group" aria-label="Basic example">
                        <a asp-action="Edit" asp-route-id="@item.ClientId" class="btn btn-sm btn-primary me-1">Редактировать</a>
                        <a asp-action="Details" asp-route-id="@item.ClientId" class="btn btn-sm btn-secondary me-1">Подробно</a>
                        <a asp-action="Delete" asp-route-id="@item.ClientId" class="btn btn-sm btn-danger">Удалить</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-ClientName="@ClientName"
           page-url-sortOrder="@(Model.SortViewModel.CurrentState)"
           page-url-Gender="@Gender"
           page-url-NationalityName="@NationalityName"
           page-url-ZodiacSignName="@ZodiacSignName"
           page-url-Age="@Age"
           page-url-Hobbies="@Hobbies"></page-link>
